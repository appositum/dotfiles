#!/usr/bin/env perl

use utf8;
use POSIX;
use strict;
use warnings;

my $state; # up or down
my $message;
my $connected; # connected or disconnected
my $wifi_name;
my $ip_address;
my $device_name;
my $link_quality;

# remove whitespaces
sub trim {
	my $s = shift;
	$s =~ s/^\s+|\s+$//g;
	return $s;
};

# Wireless interface
$device_name = `ip addr | egrep '^[0-9]: w' | awk '{print \$2}'`;
$device_name = substr(trim($device_name), 0, -1);

$state = `ip addr show $device_name | grep ',UP'`;

if ($state eq "") {
	$message = " down\n";
	printf "$message\n";
	print "#E53935\n";
} else {
	$connected = `ip addr show $device_name | grep 'state UP'`;

	if ($connected eq "") {
		$message = " up\n";
		printf "$message\n";
	} else {
		$ip_address = `ip addr show $device_name | egrep 'inet ' | awk '{print \$2}' | tr '/' ' ' | awk '{print \$1}'`;
		$ip_address = trim($ip_address);

		# Get ESSID
		$wifi_name=`iwconfig $device_name | grep ESSID | awk -F: '{print \$2}'`;
		$wifi_name = substr(trim($wifi_name), 1, -1);

		if ($ip_address eq "") {
			$message = " connecting on $wifi_name\n";
			printf "$message\n";
			print "#00BFFF\n";
		} else {
			# Wireless signal quality
			$link_quality = `cat /proc/net/wireless | egrep ^w | awk '{print \$3}'`;
			$link_quality = substr(trim($link_quality), 0, -1);
			$link_quality = floor($link_quality * 100 / 70);

			$message = " on ($link_quality\%% at $wifi_name) $ip_address\n";
			printf "$message\n";
			print "#00BFFF\n";
		}
	}
}
